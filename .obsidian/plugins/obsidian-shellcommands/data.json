{
  "settings_version": "0.22.0",
  "debug": false,
  "obsidian_command_palette_prefix": "Execute: ",
  "preview_variables_in_command_palette": true,
  "show_autocomplete_menu": true,
  "working_directory": "",
  "default_shells": {},
  "environment_variable_path_augmentations": {},
  "show_installation_warnings": true,
  "error_message_duration": 20,
  "notification_message_duration": 10,
  "execution_notification_mode": "disabled",
  "output_channel_clipboard_also_outputs_to_notification": true,
  "output_channel_notification_decorates_output": true,
  "enable_events": true,
  "approve_modals_by_pressing_enter_key": true,
  "command_palette": {
    "re_execute_last_shell_command": {
      "enabled": true,
      "prefix": "Re-execute: "
    }
  },
  "max_visible_lines_in_shell_command_fields": false,
  "shell_commands": [
    {
      "id": "ps5f3jsfji",
      "platform_specific_commands": {
        "default": " echo 'Hello, World! {{link-title}}' | pbcopy"
      },
      "shells": {},
      "alias": "",
      "icon": null,
      "confirm_execution": false,
      "ignore_error_codes": [],
      "input_contents": {
        "stdin": null
      },
      "output_handlers": {
        "stdout": {
          "handler": "ignore",
          "convert_ansi_code": true
        },
        "stderr": {
          "handler": "notification",
          "convert_ansi_code": true
        }
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [
        {
          "type": "prompt",
          "enabled": true,
          "prompt_id": "g6tb43vt39"
        }
      ],
      "variable_default_values": {},
      "execution_notification_mode": null,
      "debounce": null
    },
    {
      "id": "h167k5bfpj",
      "platform_specific_commands": {
        "default": "export LANG=en_US.UTF-8;export LC_ALL=en_US.UTF-8;echo \"{{file_path:relative}}\" | pbcopy"
      },
      "shells": {},
      "alias": "dir",
      "icon": null,
      "confirm_execution": false,
      "ignore_error_codes": [],
      "input_contents": {
        "stdin": null
      },
      "output_handlers": {
        "stdout": {
          "handler": "ignore",
          "convert_ansi_code": true
        },
        "stderr": {
          "handler": "notification",
          "convert_ansi_code": true
        }
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {},
      "execution_notification_mode": null,
      "debounce": null
    },
    {
      "id": "ay313irj9a",
      "platform_specific_commands": {
        "default": ""
      },
      "shells": {},
      "alias": "",
      "icon": null,
      "confirm_execution": false,
      "ignore_error_codes": [],
      "input_contents": {
        "stdin": null
      },
      "output_handlers": {
        "stdout": {
          "handler": "ignore",
          "convert_ansi_code": true
        },
        "stderr": {
          "handler": "notification",
          "convert_ansi_code": true
        }
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {},
      "execution_notification_mode": null,
      "debounce": null
    },
    {
      "id": "3rfs2o0o84",
      "platform_specific_commands": {
        "default": "/opt/homebrew/bin/code {{vault_path}} {{vault_path}}/{{file_path:relative}}\n"
      },
      "shells": {},
      "alias": "code3",
      "icon": null,
      "confirm_execution": false,
      "ignore_error_codes": [],
      "input_contents": {
        "stdin": null
      },
      "output_handlers": {
        "stdout": {
          "handler": "ignore",
          "convert_ansi_code": true
        },
        "stderr": {
          "handler": "notification",
          "convert_ansi_code": true
        }
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {},
      "execution_notification_mode": null,
      "debounce": null
    },
    {
      "id": "zjup03fsbq",
      "platform_specific_commands": {
        "default": "open -a /Applications/Obsidian.app /Users/zak/ghq/github.com/s-blu/obsidian_dataview_example_vault"
      },
      "shells": {},
      "alias": "obsidian_dataview_example_vault",
      "icon": null,
      "confirm_execution": false,
      "ignore_error_codes": [],
      "input_contents": {
        "stdin": null
      },
      "output_handlers": {
        "stdout": {
          "handler": "ignore",
          "convert_ansi_code": true
        },
        "stderr": {
          "handler": "notification",
          "convert_ansi_code": true
        }
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {},
      "execution_notification_mode": null,
      "debounce": null
    },
    {
      "id": "1uz4et6rkd",
      "platform_specific_commands": {
        "default": "/Users/zak/.asdf/shims/python ./system/commands/zennsync.py {{vault_path}} {{file_path:absolute}}"
      },
      "shells": {},
      "alias": "zenn sync",
      "icon": null,
      "confirm_execution": false,
      "ignore_error_codes": [],
      "input_contents": {
        "stdin": null
      },
      "output_handlers": {
        "stdout": {
          "handler": "current-file-bottom",
          "convert_ansi_code": true
        },
        "stderr": {
          "handler": "notification",
          "convert_ansi_code": true
        }
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {},
      "execution_notification_mode": null,
      "debounce": null
    },
    {
      "id": "qsw67woxob",
      "platform_specific_commands": {
        "default": "cd {{vault_path}}/sub-vaults/zenn-content;git add .;git commit -m \"update\";git push origin main"
      },
      "shells": {},
      "alias": "zenn update",
      "icon": null,
      "confirm_execution": false,
      "ignore_error_codes": [],
      "input_contents": {
        "stdin": null
      },
      "output_handlers": {
        "stdout": {
          "handler": "ignore",
          "convert_ansi_code": true
        },
        "stderr": {
          "handler": "notification",
          "convert_ansi_code": true
        }
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {},
      "execution_notification_mode": null,
      "debounce": null
    },
    {
      "id": "k67t7iawg5",
      "platform_specific_commands": {
        "default": "/Users/zak/.asdf/shims/python ./system/commands/generate_wordlist.py "
      },
      "shells": {},
      "alias": "gen wordlist pdf",
      "icon": null,
      "confirm_execution": false,
      "ignore_error_codes": [],
      "input_contents": {
        "stdin": null
      },
      "output_handlers": {
        "stdout": {
          "handler": "ignore",
          "convert_ansi_code": true
        },
        "stderr": {
          "handler": "notification",
          "convert_ansi_code": true
        }
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {},
      "execution_notification_mode": null,
      "debounce": null
    },
    {
      "id": "wj9121dirj",
      "platform_specific_commands": {
        "default": "open 'obsidian://open?vault=obsidian-vault-zak&file=Task System'"
      },
      "shells": {},
      "alias": "Open 'Task System'",
      "icon": null,
      "confirm_execution": false,
      "ignore_error_codes": [],
      "input_contents": {
        "stdin": null
      },
      "output_handlers": {
        "stdout": {
          "handler": "ignore",
          "convert_ansi_code": true
        },
        "stderr": {
          "handler": "notification",
          "convert_ansi_code": true
        }
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {},
      "execution_notification_mode": null,
      "debounce": null
    },
    {
      "id": "czdutcovia",
      "platform_specific_commands": {
        "default": "/Users/zak/.asdf/shims/go run ./system/commands/new-competitive-problem.go"
      },
      "shells": {},
      "alias": "",
      "icon": null,
      "confirm_execution": false,
      "ignore_error_codes": [],
      "input_contents": {
        "stdin": null
      },
      "output_handlers": {
        "stdout": {
          "handler": "ignore",
          "convert_ansi_code": true
        },
        "stderr": {
          "handler": "notification",
          "convert_ansi_code": true
        }
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "execution_notification_mode": null,
      "events": {},
      "debounce": null,
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {}
    },
    {
      "id": "8wtka23bb3",
      "platform_specific_commands": {
        "default": "/opt/homebrew/bin/code /Users/zak/ghq/github.com/1206yaya/competitive-programing-go/atcode"
      },
      "shells": {},
      "alias": "Open competitive-programing-go",
      "icon": null,
      "confirm_execution": false,
      "ignore_error_codes": [],
      "input_contents": {
        "stdin": null
      },
      "output_handlers": {
        "stdout": {
          "handler": "ignore",
          "convert_ansi_code": true
        },
        "stderr": {
          "handler": "notification",
          "convert_ansi_code": true
        }
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "execution_notification_mode": null,
      "events": {},
      "debounce": null,
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {}
    }
  ],
  "prompts": [
    {
      "id": "g6tb43vt39",
      "title": "test1",
      "description": "#!/bin/bash\n\n# パラメータを受け取る\nprojectName=$1\n\n# ここで何らかの処理を行う、例えばechoを使ってクリップボードにコピー\necho \"Hello, World! projectName and ${_projectName}\" | pbcopy\n",
      "preview_shell_command": true,
      "fields": [
        {
          "type": "single-line-text",
          "label": "",
          "description": "",
          "default_value": "",
          "target_variable_id": "swb8szixh9",
          "required": true
        }
      ],
      "execute_button_text": "Execute"
    }
  ],
  "builtin_variables": {},
  "custom_variables": [
    {
      "id": "swb8szixh9",
      "name": "projectName",
      "description": "",
      "default_value": null
    }
  ],
  "custom_variables_notify_changes_via": {
    "obsidian_uri": true,
    "output_assignment": true
  },
  "custom_shells": [],
  "output_wrappers": []
}